name: clean-and-update

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch: null

jobs:
  clean-and-update:
    name: clean-and-update
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.CF_CURATOR_APP_ID }}
          private_key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}

      - name: configure conda
        shell: bash -l {0}
        run: |
          conda config --set show_channel_urls True
          conda config --add channels conda-forge
          conda install --yes --quiet --file conda-requirements.txt
          git config --global user.name "conda-forge-linter"
          git config --global user.email conda.forge.linter@gmail.com
          mkdir -p ~/.conda-smithy/ && echo $GH_TOKEN > ~/.conda-smithy/github.token
          pip install --no-deps -e .
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: clean cf-staging
        shell: bash -l {0}
        run: |
          python scripts/clean_cf_staging.py
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
          STAGING_BINSTAR_TOKEN: ${{ secrets.HEROKU_ONLY_STAGING_BINSTAR_TOKEN }}

      - name: cache status data
        shell: bash -l {0}
        run: |
          cache-status-data
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: update and redeploy if needed
        shell: bash -l {0}
        run: |
          update-webservices
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
